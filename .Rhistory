"Washington", "West Virginia", "Wisconsin", "Wyoming")
)
head(state_data)
#join the data together
df <- state_pop_formatted %>%
left_join(state_data, by = c('State' = 'Abbreviation')) %>%
left_join(census_pop_formatted, by = c("FullName" = "Name", "Census_year" = "Year"))
head(df)
state_data
df
knitr::opts_chunk$set(echo = TRUE)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP: WYPOP, names_to='State') %>%
mutate(State = substr(State1, 2), Census_year = floor((asinteger(substr(DATE, 1, 4)) 1)/10) * 10, Estimated_Population = value * 1000, election_year = as.integer(substr(DATE, start=1, stop-4)) - 1788) %% 4=0)) %>%
state_pop <- read.table("State_Populations_Annual.txt", sep='\t', header = TRUE)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State1, 2), Census_year = floor((asinteger(substr(DATE, 1, 4)) 1)/10) * 10, Estimated_Population = value * 1000, election_year = as.integer(substr(DATE, start=1, stop-4)) - 1788) %% 4=0)%>%
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State1, 2), Census_year = floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10, Estimated_Population = value * 1000, election_year = as.integer(substr(DATE, start=1, stop-4)) - 1788) %% 4=0)%>%
state_pop <- read.table("State_Populations_Annual.txt", sep='\t', header = TRUE)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State = substr(State1, 2), Census_year = floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10, Estimated_Population=value * 1000,election_year = as.integer(substr(DATE, start=1, stop-4)) - 1788) %% 4=0)%>%
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10, Estimated_Population=value * 1000,election_year = as.integer(substr(DATE, start=1, stop-4)) - 1788) %% 4=0)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10, Estimated_Population=value * 1000,election_year = as.integer(substr(DATE, start=1, stop-4)) - 1788) %% 4=0
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10, Estimated_Population=value * 1000,election_year = as.integer(substr(DATE, start=1, stop-4)) - 1788) %% 4=0
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year = as.integer(substr(DATE, start=1, stop-4)) - 1788) %% 4=0)
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4=0)
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year= (as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4=0)
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=(as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4==0)
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) *
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=(as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4==0)
state_pop_formatted<-state_pop %>%
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=(as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4==0)
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=(as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4==0)
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=(as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4==0)%>%
filter (DATE >= "1910-01-01")%>%
select(-value)
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=(as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4==0)%>%
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=(as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4==0)%>%
filter (DATE >= "1910-01-01")%>%
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=(as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4==0)%>%
filter (DATE >= "1910-01-01")%>%
select(-value)
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=(as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4==0)%>%
filter (DATE >= "1910-01-01")%>%
select(-value)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor(as.integer(substr(DATE, 1, 4)) -1) / 10) * 10, Estimated_Population = value * 1000, election_year = (as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4 == 0) %>%
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor(as.integer(substr(DATE, 1, 4)) / 10) * 10, Estimated_Population = value * 1000, election_year = (as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4 == 0) %>%
filter(DATE >= "1910-01-01") %>%
select(-value)
library(tidyverse)
state_pop_formatted<-state_pop %>%
pivot_longer(cols=AKPOP:WYPOP,names_to='State') %>%
mutate(State=substr(State, 1, 2), Census_year=floor((asinteger(substr(DATE, 1, 4)) - 1)/10) * 10,Estimated_Population=value * 1000,election_year=(as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4==0)%>%
filter (DATE >= "1910-01-01")%>%
select(-value)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((as.integer(substr(DATE, 1, 4))-1)/ 10) * 10, Estimated_Population = value * 1000, election_year = (as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4 == 0) %>%
filter(DATE >= "1910-01-01") %>%
select(-value)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#https://fred.stlouisfed.org/tags/series?t=population%3Bstate
##import data
state_pop <- read.table("State_Populations_Annual.txt", sep='\t', header = TRUE)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((as.integer(substr(DATE, 1, 4))-1)/ 10) * 10, Estimated_Population = value * 1000, election_year = (as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4 == 0) %>%
filter(DATE >= "1910-01-01") %>%
select(-value)
head(state_pop_formatted)
#https://www.census.gov/data/tables/time-series/dec/apportionment-data-text.html
#import data
census_pop <- read.csv("apportionment.csv")
census_pop_formatted <- census_pop %>%
mutate(Electors = ifelse(Name == "District of Columbia", 3, Number.of.Representatives + 2)) %>%
select(-Geography.Type)
head(census_pop_formatted)
#create state join
state_data <- data.frame(
Abbreviation = c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME",
"MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI",
"SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"),
FullName = c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "District of Columbia",
"Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine",
"Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada",
"New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia",
"Washington", "West Virginia", "Wisconsin", "Wyoming")
)
head(state_data)
#join the data together
df <- state_pop_formatted %>%
left_join(state_data, by = c('State' = 'Abbreviation')) %>%
left_join(census_pop_formatted, by = c("FullName" = "Name", "Census_year" = "Year"))
df["census_pop_numeric"] <- as.integer(gsub(',', '', df$Resident.Population))
df["electoral_power"] <-ifelse(!is.na(df$Estimated_Population) & !is.na(df$Electors), df$Estimated_Population / df$Electors, 0) / 10000
df["pop_difference"] <- df$Estimated_Population - df$census_pop_numeric
df["pop_deviation"] <- df$pop_difference / df$census_pop_numeric
write.csv(df, file = "combined_data.csv")
df
Summary(df)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#https://fred.stlouisfed.org/tags/series?t=population%3Bstate
##import data
state_pop <- read.table("State_Populations_Annual.txt", sep='\t', header = TRUE)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((as.integer(substr(DATE, 1, 4)) - 1) / 10) * 10, Estimated_Population = value * 1000, election_year = (as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4 == 0) %>%
filter(DATE >= "1910-01-01") %>%
select(-value)
head(state_pop_formatted)
#https://www.census.gov/data/tables/time-series/dec/apportionment-data-text.html
# take into account states that were added to the union and had an election before the census year
#import data
census_pop <- read.csv("apportionment.csv")
census_pop_formatted <- census_pop %>%
mutate(Electors = ifelse(Name == "District of Columbia", 3, Number.of.Representatives + 2)) %>%
select(-Geography.Type)
head(census_pop_formatted)
#create state join
state_data <- data.frame(
Abbreviation = c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME",
"MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI",
"SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"),
FullName = c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "District of Columbia",
"Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine",
"Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada",
"New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia",
"Washington", "West Virginia", "Wisconsin", "Wyoming")
)
head(state_data)
#join the data together
df <- state_pop_formatted %>%
left_join(state_data, by = c('State' = 'Abbreviation')) %>%
left_join(census_pop_formatted, by = c("FullName" = "Name", "Census_year" = "Year"))
df["census_pop_numeric"] <- as.integer(gsub(',', '', df$Resident.Population))
df["electoral_power"] <-ifelse(!is.na(df$Estimated_Population) & !is.na(df$Electors), df$Estimated_Population / df$Electors, 0) / 10000
df["pop_difference"] <- df$Estimated_Population - df$census_pop_numeric
df["pop_deviation"] <- df$pop_difference / df$census_pop_numeric
head(df)
election_results <- read.csv("2000-2020 Election Results.csv")
df2 <- df %>%
mutate(Date_year = as.integer(substring(DATE, 1, 4))) %>%
left_join(election_results, by = c("FullName" = "State", "Date_year" = "Year"))
head(df2)
# total pop and total electors
total <- df2 %>%
group_by(DATE) %>%
summarise(total_pop = sum(ifelse(!is.na(Estimated_Population), Estimated_Population , 0)), total_electors = sum(ifelse(!is.na(Electors), Electors, 0)))
df3 <- df2 %>%
left_join(total, by = c("DATE" = "DATE")) %>%
mutate(pop_percent = Estimated_Population / total_pop, elector_percent = Electors / total_electors)
head(df3)
elector_estimates <- df3 %>%
select(DATE, State, Estimated_Population, total_pop) %>%
filter(DATE >= '2000-01-01')
calculate_representatives <- function(estimated_population, total_population, total_electors) {
# Calculate the proportion of the state's population to the total population
proportion <- estimated_population / total_population
# Calculate the number of representatives for the state
representatives <- round(proportion * total_electors)
# Ensure that each state has at least one representative
representatives[representatives < 1] <- 1
return(representatives)
}
elector_estimates['estimate_electors'] <- calculate_representatives(elector_estimates['Estimated_Population'], elector_estimates['total_pop'], 438) + 2
df4 <- df3 %>%
left_join(elector_estimates, by = c("State" = "State", "DATE" = "DATE"))
head(df4)
write.csv(df4, file = "combined_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#https://fred.stlouisfed.org/tags/series?t=population%3Bstate
##import data
state_pop <- read.table("State_Populations_Annual.txt", sep='\t', header = TRUE)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((as.integer(substr(DATE, 1, 4))-1)/ 10) * 10, Estimated_Population = value * 1000, election_year = (as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4 == 0) %>%
filter(DATE >= "1910-01-01") %>%
select(-value)
head(state_pop_formatted)
#https://www.census.gov/data/tables/time-series/dec/apportionment-data-text.html
#import data
census_pop <- read.csv("apportionment.csv")
census_pop_formatted <- census_pop %>%
mutate(Electors = ifelse(Name == "District of Columbia", 3, Number.of.Representatives + 2)) %>%
select(-Geography.Type)
head(census_pop_formatted)
#create state join
state_data <- data.frame(
Abbreviation = c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME",
"MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI",
"SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"),
FullName = c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "District of Columbia",
"Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine",
"Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada",
"New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia",
"Washington", "West Virginia", "Wisconsin", "Wyoming")
)
head(state_data)
#join the data together
df <- state_pop_formatted %>%
left_join(state_data, by = c('State' = 'Abbreviation')) %>%
left_join(census_pop_formatted, by = c("FullName" = "Name", "Census_year" = "Year"))
df["census_pop_numeric"] <- as.integer(gsub(',', '', df$Resident.Population))
df["electoral_power"] <-ifelse(!is.na(df$Estimated_Population) & !is.na(df$Electors), df$Estimated_Population / df$Electors, 0) / 10000
df["pop_difference"] <- df$Estimated_Population - df$census_pop_numeric
df["pop_deviation"] <- df$pop_difference / df$census_pop_numeric
write.csv(df, file = "combined_data.csv")
df
#Import EC Results
ec_results_2000<- read.csv("C:/Users/Niall Johnson/Downloads/Elector Power Project - IN PROG - R v D Post 2000 - States.csv")
total_votes <- ec_results_2000 %>%
select(-Electoral.Vote.of.each.State)
total_votes_1<- total_votes %>%
group_by(Year) %>%
summarise(Republican_Votes = sum(Republican),
Democratic_Votes = sum(Democratic))
total_votes_2 <- total_votes_1 %>%
mutate(Winner = ifelse(Republican_Votes > Democratic_Votes, "Republican", "Democratic"))
print(total_votes_2)
write.csv(total_votes_2, file = "Post_2000_Electors.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#https://fred.stlouisfed.org/tags/series?t=population%3Bstate
##import data
state_pop <- read.table("State_Populations_Annual.txt", sep='\t', header = TRUE)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((as.integer(substr(DATE, 1, 4)) - 1) / 10) * 10, Estimated_Population = value * 1000, election_year = (as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4 == 0) %>%
filter(DATE >= "1910-01-01") %>%
select(-value)
head(state_pop_formatted)
#https://www.census.gov/data/tables/time-series/dec/apportionment-data-text.html
# take into account states that were added to the union and had an election before the census year
#import data
census_pop <- read.csv("apportionment.csv")
census_pop_formatted <- census_pop %>%
mutate(Electors = ifelse(Name == "District of Columbia", 3, Number.of.Representatives + 2)) %>%
select(-Geography.Type)
head(census_pop_formatted)
#create state join
state_data <- data.frame(
Abbreviation = c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME",
"MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI",
"SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"),
FullName = c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "District of Columbia",
"Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine",
"Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada",
"New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia",
"Washington", "West Virginia", "Wisconsin", "Wyoming")
)
head(state_data)
#join the data together
df <- state_pop_formatted %>%
left_join(state_data, by = c('State' = 'Abbreviation')) %>%
left_join(census_pop_formatted, by = c("FullName" = "Name", "Census_year" = "Year"))
df["census_pop_numeric"] <- as.integer(gsub(',', '', df$Resident.Population))
df["electoral_power"] <-ifelse(!is.na(df$Estimated_Population) & !is.na(df$Electors), df$Estimated_Population / df$Electors, 0) / 10000
df["pop_difference"] <- df$Estimated_Population - df$census_pop_numeric
df["pop_deviation"] <- df$pop_difference / df$census_pop_numeric
head(df)
election_results <- read.csv("2000-2020 Election Results.csv")
df2 <- df %>%
mutate(Date_year = as.integer(substring(DATE, 1, 4))) %>%
left_join(election_results, by = c("FullName" = "State", "Date_year" = "Year"))
head(df2)
# total pop and total electors
total <- df2 %>%
group_by(DATE) %>%
summarise(total_pop = sum(ifelse(!is.na(Estimated_Population), Estimated_Population , 0)), total_electors = sum(ifelse(!is.na(Electors), Electors, 0)))
df3 <- df2 %>%
left_join(total, by = c("DATE" = "DATE")) %>%
mutate(pop_percent = Estimated_Population / total_pop, elector_percent = Electors / total_electors)
head(df3)
elector_estimates <- df3 %>%
select(DATE, State, Estimated_Population, total_pop) %>%
filter(DATE >= '2000-01-01')
calculate_representatives <- function(estimated_population, total_population, total_electors) {
# Calculate the proportion of the state's population to the total population
proportion <- estimated_population / total_population
# Calculate the number of representatives for the state
representatives <- round(proportion * total_electors)
# Ensure that each state has at least one representative
representatives[representatives < 1] <- 1
return(representatives)
}
elector_estimates['estimate_electors'] <- calculate_representatives(elector_estimates['Estimated_Population'], elector_estimates['total_pop'], 438) + 2
df4 <- df3 %>%
left_join(elector_estimates, by = c("State" = "State", "DATE" = "DATE"))
head(df4)
write.csv(df4, file = "combined_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#https://fred.stlouisfed.org/tags/series?t=population%3Bstate
##import data
state_pop <- read.table("State_Populations_Annual.txt", sep='\t', header = TRUE)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((as.integer(substr(DATE, 1, 4)) - 1) / 10) * 10, Estimated_Population = value * 1000, election_year = (as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4 == 0) %>%
filter(DATE >= "1910-01-01") %>%
select(-value)
head(state_pop_formatted)
#https://www.census.gov/data/tables/time-series/dec/apportionment-data-text.html
# take into account states that were added to the union and had an election before the census year
#import data
census_pop <- read.csv("apportionment.csv")
census_pop_formatted <- census_pop %>%
mutate(Electors = ifelse(Name == "District of Columbia", 3, Number.of.Representatives + 2)) %>%
select(-Geography.Type)
head(census_pop_formatted)
#create state join
state_data <- data.frame(
Abbreviation = c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME",
"MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI",
"SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"),
FullName = c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "District of Columbia",
"Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine",
"Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada",
"New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia",
"Washington", "West Virginia", "Wisconsin", "Wyoming")
)
head(state_data)
#join the data together
df <- state_pop_formatted %>%
left_join(state_data, by = c('State' = 'Abbreviation')) %>%
left_join(census_pop_formatted, by = c("FullName" = "Name", "Census_year" = "Year"))
df["census_pop_numeric"] <- as.integer(gsub(',', '', df$Resident.Population))
df["electoral_power"] <-ifelse(!is.na(df$Estimated_Population) & !is.na(df$Electors), df$Estimated_Population / df$Electors, 0) / 10000
df["pop_difference"] <- df$Estimated_Population - df$census_pop_numeric
df["pop_deviation"] <- df$pop_difference / df$census_pop_numeric
head(df)
election_results <- read.csv("2000-2020 Election Results.csv")
df2 <- df %>%
mutate(Date_year = as.integer(substring(DATE, 1, 4))) %>%
left_join(election_results, by = c("FullName" = "State", "Date_year" = "Year"))
head(df2)
# total pop and total electors
total <- df2 %>%
group_by(DATE) %>%
summarise(total_pop = sum(ifelse(!is.na(Estimated_Population), Estimated_Population , 0)), total_electors = sum(ifelse(!is.na(Electors), Electors, 0)))
df3 <- df2 %>%
left_join(total, by = c("DATE" = "DATE")) %>%
mutate(pop_percent = Estimated_Population / total_pop, elector_percent = Electors / total_electors)
head(df3)
elector_estimates <- df3 %>%
select(DATE, State, Estimated_Population, total_pop) %>%
filter(DATE >= '2000-01-01')
calculate_representatives <- function(estimated_population, total_population, total_electors) {
# Calculate the proportion of the state's population to the total population
proportion <- estimated_population / total_population
# Calculate the number of representatives for the state
representatives <- round(proportion * total_electors)
# Ensure that each state has at least one representative
representatives[representatives < 1] <- 1
return(representatives)
}
elector_estimates['estimate_electors'] <- calculate_representatives(elector_estimates['Estimated_Population'], elector_estimates['total_pop'], 438) + 2
df4 <- df3 %>%
left_join(elector_estimates, by = c("State" = "State", "DATE" = "DATE"))
head(df4)
write.csv(df4, file = "combined_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#https://fred.stlouisfed.org/tags/series?t=population%3Bstate
##import data
state_pop <- read.table("State_Populations_Annual.txt", sep='\t', header = TRUE)
state_pop_formatted <- state_pop %>%
pivot_longer(cols=AKPOP:WYPOP, names_to='State') %>%
mutate(State = substr(State, 1, 2), Census_year = floor((as.integer(substr(DATE, 1, 4)) - 1) / 10) * 10, Estimated_Population = value * 1000, election_year = (as.integer(substr(DATE, start=1, stop=4)) - 1788) %% 4 == 0) %>%
filter(DATE >= "1910-01-01") %>%
select(-value)
head(state_pop_formatted)
#https://www.census.gov/data/tables/time-series/dec/apportionment-data-text.html
# take into account states that were added to the union and had an election before the census year
#import data
census_pop <- read.csv("apportionment.csv")
census_pop_formatted <- census_pop %>%
mutate(Electors = ifelse(Name == "District of Columbia", 3, Number.of.Representatives + 2)) %>%
select(-Geography.Type)
head(census_pop_formatted)
#create state join
state_data <- data.frame(
Abbreviation = c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME",
"MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI",
"SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"),
FullName = c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "District of Columbia",
"Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine",
"Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada",
"New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon",
"Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia",
"Washington", "West Virginia", "Wisconsin", "Wyoming")
)
head(state_data)
#join the data together
df <- state_pop_formatted %>%
left_join(state_data, by = c('State' = 'Abbreviation')) %>%
left_join(census_pop_formatted, by = c("FullName" = "Name", "Census_year" = "Year"))
df["census_pop_numeric"] <- as.integer(gsub(',', '', df$Resident.Population))
df["electoral_power"] <-ifelse(!is.na(df$Estimated_Population) & !is.na(df$Electors), df$Estimated_Population / df$Electors, 0) / 10000
df["pop_difference"] <- df$Estimated_Population - df$census_pop_numeric
df["pop_deviation"] <- df$pop_difference / df$census_pop_numeric
head(df)
election_results <- read.csv("2000-2020 Election Results.csv")
df2 <- df %>%
mutate(Date_year = as.integer(substring(DATE, 1, 4))) %>%
left_join(election_results, by = c("FullName" = "State", "Date_year" = "Year"))
head(df2)
# total pop and total electors
total <- df2 %>%
group_by(DATE) %>%
summarise(total_pop = sum(ifelse(!is.na(Estimated_Population), Estimated_Population , 0)), total_electors = sum(ifelse(!is.na(Electors), Electors, 0)))
df3 <- df2 %>%
left_join(total, by = c("DATE" = "DATE")) %>%
mutate(pop_percent = Estimated_Population / total_pop, elector_percent = Electors / total_electors)
head(df3)
elector_estimates <- df3 %>%
select(DATE, State, Estimated_Population, total_pop) %>%
filter(DATE >= '2000-01-01')
calculate_representatives <- function(estimated_population, total_population, total_electors) {
# Calculate the proportion of the state's population to the total population
proportion <- estimated_population / total_population
# Calculate the number of representatives for the state
representatives <- round(proportion * total_electors)
# Ensure that each state has at least one representative
representatives[representatives < 1] <- 1
return(representatives)
}
elector_estimates['estimate_electors'] <- calculate_representatives(elector_estimates['Estimated_Population'], elector_estimates['total_pop'], 438) + 2
df4 <- df3 %>%
left_join(elector_estimates, by = c("State" = "State", "DATE" = "DATE"))
head(df4)
write.csv(df4, file = "combined_data.csv")
head(July22poll)
library(tidyverse)
getwd()
July22poll <- read.csv("C:/Users/Niall Johnson/OneDrive/Documents/July 2022 Data.csv")
head(July22poll)
cross_table <- xtabs(~STATE + RACE, data = July22poll)
cross_table <- xtabs(~STATE + RACE, data = July22poll)
cross_table
library(tidyverse)
getwd()
July22poll <- read.csv("C:/Users/Niall Johnson/OneDrive/Documents/July 2022 Data.csv")
head(July22poll)
cross_table <- xtabs(~STATE + RACE, data = July22poll margins = TRUE)
library(tidyverse)
getwd()
July22poll <- read.csv("C:/Users/Niall Johnson/OneDrive/Documents/July 2022 Data.csv")
head(July22poll)
cross_table <- xtabs(~STATE + RACE, data = July22poll, margins = TRUE)
cross_table <- xtabs(~STATE + RACE, data = July22poll,)
cross_table_with_margins <- addmargins(cross_table, margin = c(1, 2))
library(tidyverse)
getwd()
July22poll <- read.csv("C:/Users/Niall Johnson/OneDrive/Documents/July 2022 Data.csv")
head(July22poll)
cross_table <- xtabs(~STATE + RACE, data = July22poll,)
cross_table_m <- addmargins(cross_table, margin = c(1, 2))
print(cross_table_m)
t(cross_table_m)
